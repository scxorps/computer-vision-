import numpy as np 
import cv2
#DETECT SOMETHING INSIDE AN IMAGE

img = cv2.imread('soccer_practice.jpg',0)
#LOAD IMAGE
template = cv2.imread('ball.PNG',0)
#LOAD TEMPLATE

h, w = template.shape
#GET TEMPLATE HEIGHT AND WIDTH

methods = [cv2.TM_CCOEFF, cv2.TM_SQDIFF,cv2.TM_SQDIFF_NORMED, cv2.TM_CCOEFF_NORMED,cv2.TM_CCORR,cv2.TM_CCORR_NORMED]
#DIFFERENT METHODS TO USE 
#IN ball DETECTIONS  EXECUTION TM_CORR IS SIGNIFICANTLY WRONG
#IN shoe DETECTIONS  TM_CCOEFF AND TM_CCORR ARE SIGNIFICANTLY WRONG
for method in methods:
    img2 = img.copy()
    
    result = cv2.matchTemplate(img2,template,method)
    #MATCH TEMPLATE WITH IMAGE
    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)
    #GET MIN AND MAX VALUES AND LOCATIONS
    if method in [cv2.TM_SQDIFF,cv2.TM_SQDIFF_NORMED]:
        location = min_loc
    else:
        location = max_loc
        
    bottom_right = (location[0]+ w,location[1]+ h)
    cv2.rectangle(img2,location,bottom_right,255,5)
    cv2.imshow('match',img2)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
#fella resised the image and didnt really had to